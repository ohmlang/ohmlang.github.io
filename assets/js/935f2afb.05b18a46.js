"use strict";(self.webpackChunkohmjs_org=self.webpackChunkohmjs_org||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mySidebar":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro"},{"type":"link","label":"Tutorial","href":"https://nextjournal.com/dubroy/ohm-parsing-made-easy"},{"type":"category","label":"Reference","items":[{"type":"link","label":"Syntax reference","href":"/docs/syntax-reference","docId":"syntax-reference"},{"type":"link","label":"API reference","href":"/docs/api-reference","docId":"api-reference"},{"type":"link","label":"Extras","href":"/docs/extras","docId":"extras"},{"type":"link","label":"Errors","href":"/docs/errors","docId":"errors"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Guides","items":[{"type":"link","label":"Using with TypeScript","href":"/docs/typescript","docId":"typescript"},{"type":"link","label":"Publishing grammars","href":"/docs/publishing-grammars","docId":"publishing-grammars"},{"type":"link","label":"Contributing","href":"/docs/contributor-guide","docId":"contributor-guide"}],"collapsed":false,"collapsible":false},{"type":"category","label":"Release notes","items":[{"type":"link","label":"v17.0 (Latest)","href":"/docs/releases/ohm-js-17.0","docId":"releases/ohm-js-17.0"},{"type":"link","label":"v16.0","href":"/docs/releases/ohm-js-16.0","docId":"releases/ohm-js-16.0"}],"collapsed":false,"collapsible":false},{"type":"link","label":"Patterns and pitfalls","href":"/docs/patterns-and-pitfalls","docId":"patterns-and-pitfalls"}]},"docs":{"api-reference":{"id":"api-reference","title":"API Reference","description":"This page documents the API of Ohm/JS, a JavaScript library for working with grammars written in the Ohm language. For documentation on the Ohm language, see the syntax reference.","sidebar":"mySidebar"},"contributor-guide":{"id":"contributor-guide","title":"Contributing to Ohm","description":"Interested in contributing to Ohm? Great! Here are some tips to help you get","sidebar":"mySidebar"},"errors":{"id":"errors","title":"Ohm Errors","description":"Instantiating Grammars","sidebar":"mySidebar"},"extras":{"id":"extras","title":"Ohm Extras","description":"Ohm comes with a few extras that are not part of Ohm\'s core but are related to grammars and semantics created with Ohm.","sidebar":"mySidebar"},"indentation-sensitive":{"id":"indentation-sensitive","title":"Parsing indentation sensitive languages","description":"As of v17, Ohm has experimental support for indentation-sensitive languages. This will make it possible to write Ohm grammars for languages like Python and YAML. NOTE: as this is API is experimental, it is outside the scope of semver \u2014\xa0which means that we may make breaking changes to the API without a change to Ohm\'s major version number."},"intro":{"id":"intro","title":"Introduction","description":"Getting Started","sidebar":"mySidebar"},"patterns-and-pitfalls":{"id":"patterns-and-pitfalls","title":"Patterns and Pitfalls","description":"Grammars","sidebar":"mySidebar"},"philosophy":{"id":"philosophy","title":"Ohm Philosophy","description":"One feature that distinguishes Ohm from OMeta and other parsing DSLs / frameworks is that Ohm completely separates grammars from semantic actions. In Ohm, a grammar defines a language, and semantic actions specify what to do with valid inputs in that language. The benefits of this separation of concerns include:"},"publishing-grammars":{"id":"publishing-grammars","title":"Publishing Grammars","description":"One of the core ideas behind Ohm is that grammars are APIs. If you have","sidebar":"mySidebar"},"releases/ohm-js-16.0":{"id":"releases/ohm-js-16.0","title":"Ohm v16.0","description":"Upgrading","sidebar":"mySidebar"},"releases/ohm-js-17.0":{"id":"releases/ohm-js-17.0","title":"Ohm v17.0","description":"v17.0.0 is primarily a cleanup release in preparation for some new features that will be coming soon in minor releases. It contains a few breaking changes (as described below), but they are unlikely to affect the majority of Ohm users.","sidebar":"mySidebar"},"syntax-reference":{"id":"syntax-reference","title":"Syntax Reference","description":"This document describes the syntax of the Ohm language, which is a variant of parsing expression grammars (PEGs). If you have experience with PEGs, the Ohm syntax will mostly look familiar, but there are a few important differences to note:","sidebar":"mySidebar"},"typescript":{"id":"typescript","title":"Using Ohm with TypeScript","description":"Out of the box, Ohm mostly \\"just works\\" with TypeScript. The the built-in type definitions cover the core API, though some less frequently used parts are not (yet) there. If you notice something that\'s missing, please feel free to open an issue or submit a PR.","sidebar":"mySidebar"}}}')}}]);