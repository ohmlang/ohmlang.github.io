"use strict";(self.webpackChunkohmjs_org=self.webpackChunkohmjs_org||[]).push([[591],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),m=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=m(t),d=r,h=c["".concat(l,".").concat(d)]||c[d]||u[d]||o;return t?a.createElement(h,s(s({ref:n},p),{},{components:t})):a.createElement(h,s({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=c;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var m=2;m<o;m++)s[m]=t[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4152:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return u}});var a=t(3117),r=t(102),o=(t(7294),t(3905)),s=["components"],i={},l="Ohm v17.0",m={unversionedId:"releases/ohm-js-17.0",id:"releases/ohm-js-17.0",title:"Ohm v17.0",description:"v17.0.0 is primarily a cleanup release in preparation for some new features that will be coming soon in minor releases. It contains a few breaking changes (as described below), but they are unlikely to affect the majority of Ohm users.",source:"@site/docs/releases/ohm-js-17.0.md",sourceDirName:"releases",slug:"/releases/ohm-js-17.0",permalink:"/docs/releases/ohm-js-17.0",editUrl:"https://github.com/ohmjs/ohm/edit/main/doc/releases/ohm-js-17.0.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Contributing to Ohm",permalink:"/docs/contributor-guide"},next:{title:"Ohm v16.0",permalink:"/docs/releases/ohm-js-16.0"}},p={},u=[{value:"Upgrading",id:"upgrading",level:2},{value:"<code>any</code> now consumes a full code point",id:"any-now-consumes-a-full-code-point",level:3},{value:"Namespace helpers removed",id:"namespace-helpers-removed",level:3},{value:"Named exports only",id:"named-exports-only",level:3},{value:"<code>util</code> removed",id:"util-removed",level:3},{value:"<code>toAST</code> on built-in list rules",id:"toast-on-built-in-list-rules",level:3},{value:"New features",id:"new-features",level:2},{value:"Other changes",id:"other-changes",level:2}],c={toc:u};function d(e){var n=e.components,t=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ohm-v170"},"Ohm v17.0"),(0,o.kt)("p",null,"v17.0.0 is primarily a cleanup release in preparation for some new features that will be coming soon in minor releases. It contains a few breaking changes (as described below), but they are unlikely to affect the majority of Ohm users."),(0,o.kt)("p",null,"This version also has experimental support for ",(0,o.kt)("a",{parentName:"p",href:"#new-features"},"indentation-sensitive grammars"),"."),(0,o.kt)("h2",{id:"upgrading"},"Upgrading"),(0,o.kt)("h3",{id:"any-now-consumes-a-full-code-point"},(0,o.kt)("inlineCode",{parentName:"h3"},"any")," now consumes a full code point"),(0,o.kt)("p",null,"In JavaScript, a string is a sequence of 16-bit code units. Some Unicode characters, such as emoji, are encoded as pairs of 16-bit values. For example, the string '\ud83d\ude06' has length 2, but contains a single Unicode code point. Previously, ",(0,o.kt)("inlineCode",{parentName:"p"},"any")," matched a single 16-bit code unit \u2014 even if that unit was part of a surrogate pair. In v17, ",(0,o.kt)("inlineCode",{parentName:"p"},"any")," now matches a full Unicode character."),(0,o.kt)("p",null,"Old behaviour:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const g = ohm.grammar('OneChar { start = any }');\ng.match('\ud83d\ude06').succeeded(); // false\n")),(0,o.kt)("p",null,"New behaviour (Ohm v17+):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const g = ohm.grammar('OneChar { start = any }');\ng.match('\ud83d\ude06').succeeded(); // true\n")),(0,o.kt)("h3",{id:"namespace-helpers-removed"},"Namespace helpers removed"),(0,o.kt)("p",null,"The top-level ",(0,o.kt)("inlineCode",{parentName:"p"},"namespace")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"extendNamespace")," functions have been removed. They were never required \u2014 it was always possible to use a plain old object in any API that asked for a namespace."),(0,o.kt)("p",null,"For example, take the following code (which no longer works in v17+):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const ns = ohm.createNamespace();\nns.G = ohm.grammar('G {}');\nns.G2 = ohm.grammar('G2 <: G {}', ns);\n")),(0,o.kt)("p",null,"In Ohm v17 ",(0,o.kt)("em",{parentName:"p"},"and")," in previous versions, the code could instead be written like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const ns = {}; // <- Use a normal object literal\nns.G = ohm.grammar('G {}');\nns.G2 = ohm.grammar('G2 <: G {}', ns);\n")),(0,o.kt)("h3",{id:"named-exports-only"},"Named exports only"),(0,o.kt)("p",null,"When used as ES module, the ",(0,o.kt)("inlineCode",{parentName:"p"},"ohm-js")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"ohm-js/extras")," modules now have ",(0,o.kt)("em",{parentName:"p"},"only")," named exports, and no default export. This fixes some issues with the use of Ohm bundles (",(0,o.kt)("inlineCode",{parentName:"p"},".ohm-bundle")," files) when used with JS module bundlers like Webpack and Rollup (e.g., ","[#377][issue-377]",")."),(0,o.kt)("p",null,"As a result, the following code will no longer work (unless your bundler supports ",(0,o.kt)("a",{parentName:"p",href:"https://www.typescriptlang.org/tsconfig#allowSyntheticDefaultImports"},"synthetic default imports"),"):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import ohm from 'ohm-js';\n")),(0,o.kt)("p",null,"In Ohm v17, it should be written like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import * as ohm from 'ohm-js';\n")),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ohmjs/ohm/issues/386"},"#386")," for more context on this change."),(0,o.kt)("h3",{id:"util-removed"},(0,o.kt)("inlineCode",{parentName:"h3"},"util")," removed"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"util")," object has been removed from Ohm's public API. The two methods that were relevant to grammar authors \u2014 ",(0,o.kt)("inlineCode",{parentName:"p"},"getLineAndColumn")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"getLineAndColumnMessage")," \u2014 have been moved into the ",(0,o.kt)("inlineCode",{parentName:"p"},"extras")," module."),(0,o.kt)("p",null,"Old code (no longer works):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"ohm.util.getLineAndColumnMessage(str, [startIdx, endIdx]);\n")),(0,o.kt)("p",null,"New code (works in Ohm v17+):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {getLineAndColumnMessage} from 'ohm-js/extras';\n// ...\ngetLineAndColumnMessage(str, [startIdx, endIdx]);\n")),(0,o.kt)("p",null,"By the way, the ",(0,o.kt)("inlineCode",{parentName:"p"},"Interval")," class also has a ",(0,o.kt)("inlineCode",{parentName:"p"},"getLineAndColumnMessage")," method, which can be useful inside of semantic actions. For example, if you are using this method with the ",(0,o.kt)("inlineCode",{parentName:"p"},"sourceString")," attribute, like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"getLineAndColumnMessage(aNode.sourceString, [startIdx, endIdx]);\n")),(0,o.kt)("p",null,"...you can write it this way instead:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"aNode.source.getLineAndColumnMessage();\n")),(0,o.kt)("h3",{id:"toast-on-built-in-list-rules"},(0,o.kt)("inlineCode",{parentName:"h3"},"toAST")," on built-in list rules"),(0,o.kt)("p",null,"Ohm v17 changed the default behavior of ",(0,o.kt)("inlineCode",{parentName:"p"},"toAST")," for the built-in list rules (",(0,o.kt)("inlineCode",{parentName:"p"},"ListOf")," and friends). Both the syntactic (",(0,o.kt)("inlineCode",{parentName:"p"},"ListOf"),", ...) and lexical versions (",(0,o.kt)("inlineCode",{parentName:"p"},"listOf"),", ...) are now represented as arrays, with the separators ",(0,o.kt)("em",{parentName:"p"},"discarded"),". Previously, the syntactic versions were represented by arrays, but with separators ",(0,o.kt)("em",{parentName:"p"},"included"),", and the lexical versions were represented as strings (just like other lexical rules)."),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ohmjs/ohm/issues/394"},"#394")," for the reasoning behind this change."),(0,o.kt)("h2",{id:"new-features"},"New features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"(EXPERIMENTAL)"),": This release includes experimental support for indentation-sensitive grammars (e.g., Python, Elm, YAML). See the guide to ",(0,o.kt)("a",{parentName:"li",href:"/docs/indentation-sensitive"},"Parsing indentation sensitive languages"),".")),(0,o.kt)("h2",{id:"other-changes"},"Other changes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The deprecated ",(0,o.kt)("inlineCode",{parentName:"li"},"grammarFromScriptElement")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"grammarsFromScriptElements")," functions have been entirely removed."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"primitiveValue")," property of nodes, which was deprecated in Ohm v16, has now been completely removed \u2014 use ",(0,o.kt)("inlineCode",{parentName:"li"},"Node.sourceString")," instead.")))}d.isMDXComponent=!0}}]);