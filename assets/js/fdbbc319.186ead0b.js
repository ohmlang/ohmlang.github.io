"use strict";(self.webpackChunkohmjs_org=self.webpackChunkohmjs_org||[]).push([[429],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=r,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||a;return n?i.createElement(h,o(o({ref:t},p),{},{components:n})):i.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3868:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var i=n(3117),r=n(102),a=(n(7294),n(3905)),o=["components"],l={},s="Contributing to Ohm",u={unversionedId:"contributor-guide",id:"contributor-guide",title:"Contributing to Ohm",description:"Interested in contributing to Ohm? Great! Here are some tips to help you get",source:"@site/docs/contributor-guide.md",sourceDirName:".",slug:"/contributor-guide",permalink:"/docs/contributor-guide",editUrl:"https://github.com/ohmjs/ohm/edit/main/doc/contributor-guide.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Publishing Grammars",permalink:"/docs/publishing-grammars"},next:{title:"Ohm v17.0",permalink:"/docs/releases/ohm-js-17.0"}},p={},m=[{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Useful Scripts",id:"useful-scripts",level:3},{value:"Doing Development",id:"doing-development",level:2},{value:"Pre-commit Checks",id:"pre-commit-checks",level:3},{value:"Writing documentation",id:"writing-documentation",level:2},{value:"Publishing",id:"publishing",level:2}],c={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"contributing-to-ohm"},"Contributing to Ohm"),(0,a.kt)("p",null,"Interested in contributing to Ohm? Great! Here are some tips to help you get\nstarted."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"To develop Ohm, you'll need a recent version of ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org"},"Node.js"),".\nWe support all ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.dev/en/about/releases/"},(0,a.kt)("em",{parentName:"a"},"Active LTS")," and ",(0,a.kt)("em",{parentName:"a"},"Maintenance LTS")," releases"),"."),(0,a.kt)("p",null,"You also need to install ",(0,a.kt)("a",{parentName:"p",href:"https://classic.yarnpkg.com/lang/en/"},"Yarn 1"),"."),(0,a.kt)("h3",{id:"basic-setup"},"Basic Setup"),(0,a.kt)("p",null,"First, clone the repository:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git clone https://github.com/cdglabs/ohm.git\n")),(0,a.kt)("p",null,"Then, install the dev dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cd ohm\nyarn install\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Note: the ",(0,a.kt)("inlineCode",{parentName:"em"},"postinstall")," script (which is automatically run by ",(0,a.kt)("inlineCode",{parentName:"em"},"yarn install"),")\nwill install a git pre-commit hook. See ",(0,a.kt)("a",{parentName:"em",href:"#pre-commit-checks"},"here")," for more\ninformation.")),(0,a.kt)("h3",{id:"useful-scripts"},"Useful Scripts"),(0,a.kt)("p",null,"The following scripts are useful when developing the main ",(0,a.kt)("inlineCode",{parentName:"p"},"ohm-js")," package:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use ",(0,a.kt)("inlineCode",{parentName:"li"},"yarn test")," to run the unit tests."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn run test-watch")," re-runs the unit tests every time a file changes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"yarn build")," builds ",(0,a.kt)("inlineCode",{parentName:"li"},"dist/ohm.js")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"dist/ohm.min.js"),",\nwhich are stand-alone bundles that can be included in a webpage."),(0,a.kt)("li",{parentName:"ul"},"When editing Ohm's own grammar (in ",(0,a.kt)("inlineCode",{parentName:"li"},"src/ohm-grammar.ohm"),"), run\n",(0,a.kt)("inlineCode",{parentName:"li"},"yarn run bootstrap")," to re-build Ohm and test your changes.")),(0,a.kt)("h2",{id:"doing-development"},"Doing Development"),(0,a.kt)("p",null,"See our recommended ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ohmjs/ohm/wiki/Git-Workflow"},"Git workflow"),"."),(0,a.kt)("h3",{id:"pre-commit-checks"},"Pre-commit Checks"),(0,a.kt)("p",null,"When you run ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn install")," in an Ohm checkout, it will automatically install\na pre-commit hook into ",(0,a.kt)("inlineCode",{parentName:"p"},".git/hooks/pre-commit"),". Every time you commit to the\nrepository, the pre-commit script checks that all tests pass, and that the\ncode passes a lint check. We use ",(0,a.kt)("a",{parentName:"p",href:"http://eslint.org/"},"ESLint"),", which helps\nprevent many common programming errors, and ensures that the code follows a\nconsistent style."),(0,a.kt)("p",null,"Usually, you should deal with a lint error by fixing the code so that ESLint\nno longer complains about it. However, there are a few cases where it makes\nsense to disable the error:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If you added new ",(0,a.kt)("inlineCode",{parentName:"p"},"console.log")," statement, and ",(0,a.kt)("strong",{parentName:"p"},"you are sure that it is\nactual useful"),", you can disable the warning like this:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"console.log('a useful message');  // eslint-disable-line no-console\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If you need to introduce a global variable (are you sure?), see the ESLint\ndocumentation on ",(0,a.kt)("a",{parentName:"p",href:"http://eslint.org/docs/user-guide/configuring#specifying-globals"},"specifying globals"),"."))),(0,a.kt)("p",null,"If you need to temporarily commit something that doesn't pass the checks, you\ncan use ",(0,a.kt)("inlineCode",{parentName:"p"},"git commit --no-verify")," -- but use this sparingly!"),(0,a.kt)("h2",{id:"writing-documentation"},"Writing documentation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The documentation under doc/ is intended to work on both GitHub and\n",(0,a.kt)("a",{parentName:"li",href:"https://ohmjs.org"},"ohmjs.org"),". Since the prefix for GitHub docs is\n",(0,a.kt)("inlineCode",{parentName:"li"},"doc/"),", and the prefix on ohmjs.org is ",(0,a.kt)("inlineCode",{parentName:"li"},"docs/"),", a link that includes\none of those prefixes won't work in both places!"),(0,a.kt)("li",{parentName:"ul"},"When linking to other documentation pages, use relative links. Examples:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[Syntactic vs. Lexical Rules](#syntactic-lexical)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[negative lookahead](/docs/syntax-reference#negative-lookahead-)")))),(0,a.kt)("li",{parentName:"ul"},"When linking to source code, use an absolute link to GitHub. Example:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"The [operators example](https://github.com/ohmjs/ohm/tree/main/examples/operators)")))),(0,a.kt)("li",{parentName:"ul"},"In the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/ohmjs/ohm/blob/main/packages/ohm-js/CHANGELOG.md"},"changelog"),", use absolute links to GitHub when linking to docs,\nas that file is intended to be read in a text editor or on GitHub."),(0,a.kt)("li",{parentName:"ul"},"Images go under ",(0,a.kt)("inlineCode",{parentName:"li"},"doc/images/")," and should be linked with an absolute URL to\nohmjs.org. Example:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"https://ohm.js.org/img/docs/matching.png")," for ",(0,a.kt)("inlineCode",{parentName:"li"},"docs/images/matching.png"),".")))),(0,a.kt)("h2",{id:"publishing"},"Publishing"),(0,a.kt)("p",null,"To version and publish the ohm-js package, run the following in the ohm-js directory:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn version-package\nyarn publish\ngit push && git push --tags\n")))}d.isMDXComponent=!0}}]);